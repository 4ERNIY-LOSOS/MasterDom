# Этап 1: Сборка приложения
FROM golang:1.24-alpine AS builder

# Устанавливаем рабочую директорию внутри контейнера
WORKDIR /app

# Копируем файлы зависимостей и загружаем их
# Это кэширует зависимости, ускоряя последующие сборки
COPY go.mod go.sum ./
RUN go mod download

# Копируем остальной исходный код
COPY . .

# Собираем приложение в статичный бинарный файл
# CGO_ENABLED=0 делает сборку независимой от системных библиотек
# -o /app/main указывает, куда положить собранный файл
RUN CGO_ENABLED=0 go build -o /app/main .

# Этап 2: Создание минимального образа для запуска
FROM alpine:latest

# Устанавливаем рабочую директорию
WORKDIR /app

# Копируем только собранный бинарный файл из этапа сборки
COPY --from=builder /app/main .

# Открываем порт, на котором будет работать наше приложение
EXPOSE 8080

# Команда для запуска нашего сервера при старте контейнера
CMD ["./main"]
